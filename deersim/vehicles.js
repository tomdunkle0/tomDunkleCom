/*----------------------------------------------------------------------------------*\
 | File: deersim/vehicles.js                                                        |
 | Purpose: Defines the vehicles which are generated by I-84 Simulator's generator. |
\*----------------------------------------------------------------------------------*/

// ---- Start of object declarations. ----

/*--------------------------------------------------------*\
 | Defines the DeerTruck, a truck that's somehow carrying |
 | a live deer. When the DeerTruck is hit, it dispenses   |
 | another deer, regardless of whether it dies.           |
 | @param int   lane  -- this DeerTruck's lane.           |
 | @param float speed -- this DeerTruck's speed.          |
\*--------------------------------------------------------*/
function DeerTruck(lane, speed) {
   this.state          = "default";
   this.lane           = lane;
   this.speed          = speed;
   this.d              = 64;
   this.value          = 7500;
   this.collisionWidth = 41;

   this.x = deersim.canvas.width - this.d;

   this.y = CONST_LANE_0_BASE - (CONST_LANE_HEIGHT * this.lane);

   this.yVelocity = -7;
};

/*----------------------------------------------------------------------------*\
 | Defines the generic Vehicle, from which other vehicle classes are derived. |
 | @param int    lane           -- this Vehicle's lane.                       |
 | @param float  speed          -- this Vehicle's speed.                      |
 | @param string type           -- this Vehicle's type.                       |
 | @param int    value          -- this Vehicle's value, in dollars.          |
 | @param int    collisionWidth -- this Vehicle's visible width,              |
 |                                  used in collisionDetection().             |
\*----------------------------------------------------------------------------*/
function Vehicle(lane, speed, type, value, collisionWidth) {
   this.state          = "default";
   this.lane           = lane;
   this.speed          = speed;
   this.type           = type;
   this.d              = 128;
   this.value          = value;
   this.collisionWidth = collisionWidth;

   this.x = CONST_CANVAS_WIDTH - this.d;

   this.y = CONST_LANE_0_BASE - (CONST_LANE_HEIGHT * this.lane) - 64;

   this.yVelocity       = -7;
   this.rotationCounter = 0;
   this.angleOfRotation = 0;
   this.imageHandle     = "";
};

/*--------------------------------------------------------*\
 | Defines the WhiteVan, which is a vehicle operated      |
 | by trained tactical deer kidnappers from Saudi Arabia. |
 | @param int   lane  -- this WhiteVan's lane.            |
 | @param float speed -- this WhiteVan's speed.           |
\*--------------------------------------------------------*/
function WhiteVan(lane, speed) {
   this.lane           = lane;
   this.speed          = speed;
   this.d              = 128;
   this.collisionWidth = 79;

   // #TODO -- Make all vehicles generate offscreen as opposed to onscreen.
   this.x = deersim.canvas.width - this.d;

   this.y = (CONST_LANE_0_BASE - (CONST_LANE_HEIGHT * this.lane) - 64);
};

// ---- End of object declarations. ----

// ---- Start of function declarations. ----

/*-----------------------*\
 | Draws this DeerTruck. |
\*-----------------------*/
DeerTruck.prototype.draw = function() {
   deersim.canvasContext.drawImage(document.getElementById("DeerTruck"),
                           this.x, this.y);
};

/*-------------------------*\
 | Updates this DeerTruck. |
\*-------------------------*/
DeerTruck.prototype.update = function() {
   if (this.state === "default")
      this.x -= this.speed;
   else if (this.state === "dying") {
      this.x += 5;
      this.y += this.yVelocity;
      this.yVelocity += 0.1;
   }
};

/*---------------------*\
 | Draws this Vehicle. |
\*---------------------*/
Vehicle.prototype.draw = function() {
   this.imageHandle = this.type;

   var i = this.rotationCounter / 3;
   i = Math.ceil(i);
   if (i == 0)
      i = 12;
   this.angleOfRotation = (i - 1) * 30;

   if (this.state === "dying") {
      this.imageHandle = this.imageHandle.concat("_C_");
      this.imageHandle = this.imageHandle.concat(this.angleOfRotation);
   }

   deersim.canvasContext.drawImage(document.getElementById(this.imageHandle), this.x, this.y);
};

/*-----------------------*\
 | Updates this Vehicle. |
\*-----------------------*/
Vehicle.prototype.update = function() {
   if (this.state === "default")
      this.x -= this.speed;
   else if (this.state === "dying") {
      this.x += 5;
      this.y += this.yVelocity;
      this.yVelocity += 0.1;
   }

   this.rotationCounter++;
   if (this.rotationCounter > 35) {
      this.rotationCounter = 0;
   }
};

/*----------------------*\
 | Draws this WhiteVan. |
\*----------------------*/
WhiteVan.prototype.draw = function() {
   deersim.canvasContext.drawImage(document.getElementById("WhiteVan"),
                           this.x, this.y);
};

/*------------------------*\
 | Updates this WhiteVan. |
\*------------------------*/
WhiteVan.prototype.update = function() {
   this.x -= this.speed;
};
